#!/usr/bin/env python3
import sys
import logging
import argparse
from fqlib import PairedFastQFiles, SingleReadValidationError, PairedReadValidationError

EXIT_SINGLE_READ_VALIDATION_ERROR = 1
EXIT_PAIRED_READ_VALIDATION_ERROR = 2

if __name__ == '__main__':

    # yapf: disable
    parser = argparse.ArgumentParser(description="Lint Illumina generated, paired FastQ files.")
    parser.add_argument(
        "read_one_file",
        help="FastQ file containing all R1 reads.")
    parser.add_argument(
        "read_two_file",
        help="FastQ file containing all R2 reads.")
    parser.add_argument(
        "--print-every",
        type=int,
        default=4 * 1000000,
        help="Alter how frequently updates are printed to the screen.")

    parser.add_argument(
        "-q", "--quiet",
        help="Do not output informational messages.",
        action="store_const",
        dest="loglevel",
        const=logging.WARNING,
        default=logging.DEBUG)
    # yapf: enable

    args = parser.parse_args()
    logging.basicConfig(
        format="%(levelname)s: %(message)s", level=args.loglevel)

    pair = PairedFastQFiles(args.read_one_file, args.read_two_file)

    try:
        for readno, (read_r1, read_r2) in enumerate(pair, 1):
            if readno % args.print_every == 0:
                logging.info("Processed {:d} reads.".format(readno))
        logging.info("Finished. Processed {:d} reads.".format(readno))
    except SingleReadValidationError as e:
        for line in str(e).split("\n"):
            logging.error(line)
        sys.exit(EXIT_SINGLE_READ_VALIDATION_ERROR)
    except PairedReadValidationError as e:
        for line in str(e).split("\n"):
            logging.error(line)
        sys.exit(EXIT_PAIRED_READ_VALIDATION_ERROR)

    pair.close()
